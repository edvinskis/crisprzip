[build-system]
requires = ["setuptools>=64.0"]
build-backend = "setuptools.build_meta"

[project]

name = "crisprzip"
# [TODO] Settle on a name - the name must correspond to src/[name]
version = "1.0.0"
description = "CRISPRzip -(a physics-based CRISPR activity predictor"
# [TODO] One line description of your package/project
readme = "README"
# Here, you can include a longer description which often mirrors your README file.
# This description will appear on PyPI when your project is published.
# This corresponds to the "Description" metadata field:
# https://packaging.python.org/en/latest/guides/writing-pyproject-toml/#readme
# [TODO] Check what you want in your README
requires-python = ">=3.11"
license = {file = "LICENSE"}
keywords = ["crispr-cas9", "crispr, "bioinformatics"]
# Keywords that describe your project. These assist users in discovering your project on PyPI searches.
# These should be a comma-separated list reflecting the nature or domain of the project.
# [TODO] Add/replace relevant keywords
authors = [
  {name = "A. Doe", email = "author@tudelft.nl" }
]
# Information about the original authors of the project and their contact details.
maintainers = [
  {name = "B. Smith", email = "maintainer@tudelft.nl" }
]
# Information about the current maintainers of the project and their contact details.
# [TODO] Populate authors and maintainers field
classifiers = [
  # Indicate the development status of your project (maturity). Commonly, this is
  #   3 - Alpha
  #   4 - Beta
  #   5 - Stable
  #.  6 - Mature
  "Development Status :: 4 - Beta",

  # Target audience
  "Intended Audience :: Developers",
  "Topic :: Scientific/Engineering",

  # License type
  "License :: OSI Approved :: MIT License",

  # Python versions your software supports. This is not checked by pip install, and is different from "requires-python".
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python :: 3 :: Only",
]
#
# Classifiers help categorize the project on PyPI and aid in discoverability.
# For a full list of valid classifiers, see https://pypi.org/classifiers/
# [TODO] Follow link and classify your project maturity
dependencies = [
  "numpy>=1.20.3",
  "scipy=>1.7.1",
  "joblib=>1.1.0",
  "matplotlib>=3.7.1",
  "numba=>0.56.4",
  "pandas"
]
#
# Dependencies needed by your project. These packages will be installed by pip when
# your project is installed. Ensure these are existing, valid packages.
# For more on how this field compares to pip's requirements files, see:
# https://packaging.python.org/discussions/install-requires-vs-requirements/
# [TODO] Check if all dependencies listed - currently directly taken from setup.py and set to >= instead of exact versions

[project.urls]
"Homepage" = "https://github.com/hiddeoff"
"Source" = "https://github.com/hiddeoff/crisprzip-model"
# List of relevant URLs for your project. These are displayed on the left sidebar of your PyPI page.
# This can include links to the homepage, source code, changelog, funding, etc.
# [TODO] Check if these are the links you want to use
#
# After everything is populated, delete the commented-out lines.